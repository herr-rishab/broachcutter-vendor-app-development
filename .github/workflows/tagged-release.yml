name: Tagged Release

on:
  push:
    tags:
      - v*.*.*

jobs:
  bundle:
    name: Generate release bundle
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "RELEASE_SEMVER=$(echo $github.ref_name | cut -d'-' -f 1)" >> $GITHUB_ENV
      - name: Create keystore.properties
        run: touch keystore.properties
      - name: Write storePassword
        uses: christian-draeger/write-properties@1.1.0
        with:
          path: keystore.properties
          property: storePassword
          value: ${{ secrets.STORE_PASSWORD }}
      - name: Write keyPassword
        uses: christian-draeger/write-properties@1.1.0
        with:
          path: keystore.properties
          property: keyPassword
          value: ${{ secrets.KEY_PASSWORD }}
      - name: Write keyAlias
        uses: christian-draeger/write-properties@1.1.0
        with:
          path: keystore.properties
          property: keyAlias
          value: ${{ secrets.KEY_ALIAS }}
      - name: Write storeFile
        uses: christian-draeger/write-properties@1.1.0
        with:
          path: keystore.properties
          property: storeFile
          value: vendorapp_keystore
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Build release bundle
        run: bash ./gradlew bundleProdRelease --stacktrace --no-daemon
      - name: Upload to Firebase App Distribution
        if: ${{ contains(env.RELEASE_VERSION, 'firebase') }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_CLI_TOKEN }}
          groups: |
            broachcutter-internal
            valartech-internal
          file: app/build/outputs/bundle/prodRelease/app-prod-release.aab
          releaseNotesFile: releaseNotes/whatsnew-en-IN
          debug: true
      - name: Upload to Beta track on Play Store
        if: ${{ contains(env.RELEASE_VERSION, 'beta') }}
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: net.broachcutter.dealer
          releaseFiles: app/build/outputs/bundle/prodRelease/app-prod-release.aab
          track: beta
          whatsNewDirectory: releaseNotes
          mappingFile: app/build/outputs/mapping/prodRelease/mapping.txt
      - name: Upload to Production track on Play Store
        if: ${{ contains(env.RELEASE_VERSION, 'prod') }}
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: net.broachcutter.dealer
          releaseFiles: app/build/outputs/bundle/prodRelease/app-prod-release.aab
          track: production
          whatsNewDirectory: releaseNotes
          mappingFile: app/build/outputs/mapping/prodRelease/mapping.txt
      - name: Create Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: prod
          ignore_missing: true
          version: ${{ env.RELEASE_VERSION }}
      - name: GH Release
        uses: softprops/action-gh-release@v0.1.15
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            app/build/outputs/bundle/prodRelease/app-prod-release.aab
            app/build/outputs/mapping/prodRelease/mapping.txt
